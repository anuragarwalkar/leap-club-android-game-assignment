{"version":3,"sources":["src/constants/memoryDef.js","src/utils/utilityFunc.js","src/view/app/styles.js","index.js","src/view/app/App.js"],"names":["_characters","id","text","show","matched","clone","array","map","item","getRandomChar","randomIndex","clonedArray","currentIndex","length","Math","floor","random","_genRandomChar","getWidth","Dimensions","get","width","getHeight","height","StyleSheet","create","winnerContainer","display","alignItems","justifyContent","container","flexDirection","flexWrap","card","backgroundColor","margin","borderRadius","fontSize","color","counterText","textAlign","topBarContainer","paddingLeft","paddingRight","marginTop","StatusBar","currentHeight","marginBottom","counterHeading","fontWeight","winnerText","resetGameContainer","registerRootComponent","useState","letters","setLetters","matchIndexs","setMatchedIndexs","matchedCount","setMatchedCount","turnsCount","setTurnsCount","renderItem","index","key","onPress","newIndex","newItems","oldIndex","setTimeout","concat","onClick","View","style","styles","Text","opacity","SafeAreaView","Button","title"],"mappings":"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","file":"static/js/app.497647a9.chunk.js","sourcesContent":["const _characters = [\r\n  { id: 1, text: \"A\", show: false, matched: false },\r\n  { id: 2, text: \"B\", show: false, matched: false },\r\n  { id: 3, text: \"C\", show: false, matched: false },\r\n  { id: 4, text: \"D\", show: false, matched: false },\r\n  { id: 5, text: \"E\", show: false, matched: false },\r\n  { id: 6, text: \"F\", show: false, matched: false },\r\n  { id: 7, text: \"G\", show: false, matched: false },\r\n  { id: 8, text: \"H\", show: false, matched: false },\r\n  { id: 9, text: \"A\", show: false, matched: false },\r\n  { id: 10, text: \"B\", show: false, matched: false },\r\n  { id: 11, text: \"C\", show: false, matched: false },\r\n  { id: 12, text: \"D\", show: false, matched: false },\r\n  { id: 13, text: \"E\", show: false, matched: false },\r\n  { id: 14, text: \"F\", show: false, matched: false },\r\n  { id: 15, text: \"G\", show: false, matched: false },\r\n  { id: 16, text: \"H\", show: false, matched: false },\r\n];\r\n\r\nconst clone = (array) => {\r\n  return array.map((item) => ({ ...item }));\r\n};\r\n\r\nconst _genRandomChar = (array) => {\r\n  const clonedArray = clone(array);\r\n  let currentIndex = array.length,\r\n    randomIndex;\r\n\r\n  while (currentIndex != 0) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex--;\r\n\r\n    [clonedArray[currentIndex], clonedArray[randomIndex]] = [\r\n      clonedArray[randomIndex],\r\n      clonedArray[currentIndex],\r\n    ];\r\n  }\r\n\r\n  return clonedArray;\r\n};\r\n\r\nconst getRandomChar = () => {\r\n  return _genRandomChar(_characters);\r\n};\r\n\r\nconst maxCount = 2;\r\nexport { getRandomChar, maxCount, clone };\r\n","import { Dimensions } from \"react-native\";\r\n\r\nconst getWidth = Dimensions.get(\"window\").width;\r\n\r\nconst getHeight = Dimensions.get(\"window\").height;\r\n\r\nexport { getWidth, getHeight };\r\n","import { StatusBar, StyleSheet } from \"react-native\";\r\nimport { getHeight, getWidth } from \"../../utils/utilityFunc\";\r\n\r\nexport default StyleSheet.create({\r\n  winnerContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: getWidth,\r\n    height: getHeight,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  card: {\r\n    width: getWidth / 4.5,\r\n    height: getHeight / 5,\r\n    backgroundColor: \"#C216F5\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    margin: 5,\r\n    borderRadius: 5,\r\n  },\r\n  text: {\r\n    fontSize: 50,\r\n    color: \"white\",\r\n  },\r\n  counterText: { textAlign: \"center\", fontSize: getWidth * 0.05 },\r\n  topBarContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    marginTop: StatusBar.currentHeight + 10,\r\n\r\n    marginBottom: 20,\r\n  },\r\n  counterHeading: {\r\n    fontWeight: \"bold\",\r\n    fontSize: getWidth * 0.04,\r\n  },\r\n  winnerText: {\r\n    fontSize: getWidth * 0.09,\r\n  },\r\n  resetGameContainer: { marginTop: 20 },\r\n});\r\n","import { registerRootComponent } from \"expo\";\r\nimport \"react-native-gesture-handler\";\r\nimport App from \"./src/view/app/App\";\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n","import React, { useState } from \"react\";\r\nimport { Button, SafeAreaView, Text, View } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { clone, getRandomChar, maxCount } from \"../../constants/memoryDef\";\r\nimport styles from \"./styles\";\r\n\r\nexport default function App() {\r\n  const [letters, setLetters] = useState(getRandomChar());\r\n  const [matchIndexs, setMatchedIndexs] = useState([]);\r\n  const [matchedCount, setMatchedCount] = useState(0);\r\n  const [turnsCount, setTurnsCount] = useState(0);\r\n\r\n  const onClick = (item, newIndex) => {\r\n    if (!item.matched && matchIndexs.length < 2 && newIndex != matchIndexs[0]) {\r\n      let newItems = matchIndexs;\r\n      if (matchIndexs.length < maxCount) {\r\n        newItems = clone(letters);\r\n        newItems[newIndex].show = !newItems[newIndex].show;\r\n      }\r\n\r\n      if (matchIndexs.length === 1) {\r\n        const [oldIndex] = matchIndexs;\r\n        if (letters[oldIndex].text === letters[newIndex].text) {\r\n          newItems[oldIndex].matched = true;\r\n          newItems[newIndex].matched = true;\r\n          setMatchedCount(matchedCount + 1);\r\n        }\r\n        setTimeout(() => {\r\n          if (!newItems[oldIndex].matched && !newItems[oldIndex].matched) {\r\n            newItems[oldIndex].show = false;\r\n            newItems[newIndex].show = false;\r\n          }\r\n          setMatchedIndexs([]);\r\n          setTurnsCount(turnsCount + 1);\r\n          setLetters(newItems);\r\n        }, 600);\r\n      }\r\n\r\n      setLetters(newItems);\r\n\r\n      setMatchedIndexs(matchIndexs.concat(newIndex));\r\n    }\r\n  };\r\n\r\n  const renderItem = (item, index) => {\r\n    return (\r\n      <TouchableOpacity key={item.id} onPress={() => onClick(item, index)}>\r\n        <View style={styles.card}>\r\n          <Text style={{ ...styles.text, opacity: item.show ? 1 : 0 }}>\r\n            {item.matched ? \"🥳\" : item.text}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  const gameContainer = () => {\r\n    return (\r\n      <View style={{ display: \"flex\" }}>\r\n        <View style={styles.topBarContainer}>\r\n          <View>\r\n            <Text style={styles.counterHeading}>MATCHES</Text>\r\n            <Text style={styles.counterText}>{matchedCount}</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.counterHeading}>TURNS</Text>\r\n            <Text style={styles.counterText}>{turnsCount}</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.container}>{letters.map(renderItem)}</View>\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setTurnsCount(0);\r\n    setMatchedCount(0);\r\n    setMatchedIndexs([]);\r\n    setLetters(getRandomChar());\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      {letters.length === matchedCount * 2 ? (\r\n        <View style={styles.winnerContainer}>\r\n          <Text style={styles.winnerText}>✅ You won the game </Text>\r\n          <View style={styles.resetGameContainer}>\r\n            <Button onPress={resetGame} title=\"Restart Game\" />\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        gameContainer()\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n}\r\n"],"sourceRoot":""}