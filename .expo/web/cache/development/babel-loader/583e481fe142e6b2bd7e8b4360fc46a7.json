{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { getRandomChar, maxCount } from \"../constants/memoryDef\";\nimport { getHeight, getWidth } from \"../utils/utilityFunc\";\nexport default function App() {\n  var _useState = useState(getRandomChar()),\n      _useState2 = _slicedToArray(_useState, 2),\n      letters = _useState2[0],\n      setLetters = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      matchIndexs = _useState4[0],\n      setMatchedIndexs = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      matchedCount = _useState6[0],\n      setMatchedCount = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      turnsCount = _useState8[0],\n      setTurnsCount = _useState8[1];\n\n  var onClick = function onClick(item, newIndex) {\n    if (!item.matched && matchIndexs.length < 2 && newIndex != matchIndexs[0]) {\n      var newItems = matchIndexs;\n\n      if (matchIndexs.length < maxCount) {\n        newItems = _toConsumableArray(letters);\n        newItems[newIndex].show = !newItems[newIndex].show;\n      }\n\n      if (matchIndexs.length === maxCount - 1) {\n        var _matchIndexs = _slicedToArray(matchIndexs, 1),\n            oldIndex = _matchIndexs[0];\n\n        if (letters[oldIndex].text === letters[newIndex].text) {\n          newItems = _toConsumableArray(letters);\n          newItems[oldIndex].matched = true;\n          newItems[newIndex].matched = true;\n          setMatchedCount(matchedCount + 1);\n        }\n\n        setTimeout(function () {\n          newItems = _toConsumableArray(letters);\n\n          if (!newItems[oldIndex].matched && !newItems[oldIndex].matched) {\n            newItems[oldIndex].show = false;\n            newItems[newIndex].show = false;\n          }\n\n          setMatchedIndexs([]);\n          setTurnsCount(turnsCount + 1);\n        }, 500);\n      }\n\n      setLetters(newItems);\n      setMatchedIndexs(matchIndexs.concat(newIndex));\n    }\n  };\n\n  var renderItem = function renderItem(item, index) {\n    return React.createElement(TouchableOpacity, {\n      key: item.id,\n      onPress: function onPress() {\n        return onClick(item, index);\n      }\n    }, React.createElement(View, {\n      style: styles.card\n    }, React.createElement(Text, {\n      style: _objectSpread(_objectSpread({}, styles.text), {}, {\n        opacity: item.show ? 1 : 0\n      })\n    }, item.matched ? \"ðŸ¥³\" : item.text)));\n  };\n\n  return React.createElement(SafeAreaView, null, React.createElement(View, {\n    style: styles.topBarContainer\n  }, React.createElement(View, null, React.createElement(Text, {\n    style: styles.counterHeading\n  }, \"MATCHES\"), React.createElement(Text, {\n    style: styles.counterText\n  }, matchedCount)), React.createElement(View, null, React.createElement(Text, {\n    style: styles.counterHeading\n  }, \"TURNS\"), React.createElement(Text, {\n    style: styles.counterText\n  }, turnsCount))), React.createElement(View, {\n    style: styles.container\n  }, letters.map(renderItem)));\n}\nvar styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\"\n  },\n  card: {\n    width: getWidth() / 4.5,\n    height: (getHeight() - 100) / 4,\n    backgroundColor: \"#C216F5\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 5,\n    borderRadius: 5\n  },\n  text: {\n    fontSize: 50\n  },\n  counterText: {\n    textAlign: \"center\"\n  },\n  topBarContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: StatusBar.currentHeight,\n    justifyContent: \"space-between\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    fontSize: width * 0.03\n  },\n  counterHeading: {\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/projects/my_projects/leap.club-android-game-assignment/src/view/App.js"],"names":["React","useState","TouchableOpacity","getRandomChar","maxCount","getHeight","getWidth","App","letters","setLetters","matchIndexs","setMatchedIndexs","matchedCount","setMatchedCount","turnsCount","setTurnsCount","onClick","item","newIndex","matched","length","newItems","show","oldIndex","text","setTimeout","concat","renderItem","index","id","styles","card","opacity","topBarContainer","counterHeading","counterText","container","map","StyleSheet","create","display","flexDirection","flexWrap","width","height","backgroundColor","justifyContent","alignItems","margin","borderRadius","fontSize","textAlign","marginTop","StatusBar","currentHeight","paddingLeft","paddingRight","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { SafeAreaView, StatusBar, StyleSheet, Text, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { getRandomChar, maxCount } from \"../constants/memoryDef\";\nimport { getHeight, getWidth } from \"../utils/utilityFunc\";\n\nexport default function App() {\n  const [letters, setLetters] = useState(getRandomChar());\n  const [matchIndexs, setMatchedIndexs] = useState([]);\n  const [matchedCount, setMatchedCount] = useState(0);\n  const [turnsCount, setTurnsCount] = useState(0);\n\n  const onClick = (item, newIndex) => {\n    if (!item.matched && matchIndexs.length < 2 && newIndex != matchIndexs[0]) {\n      let newItems = matchIndexs;\n      if (matchIndexs.length < maxCount) {\n        newItems = [...letters];\n        newItems[newIndex].show = !newItems[newIndex].show;\n      }\n\n      if (matchIndexs.length === maxCount - 1) {\n        const [oldIndex] = matchIndexs;\n        if (letters[oldIndex].text === letters[newIndex].text) {\n          newItems = [...letters];\n          newItems[oldIndex].matched = true;\n          newItems[newIndex].matched = true;\n          setMatchedCount(matchedCount + 1);\n        }\n        setTimeout(() => {\n          newItems = [...letters];\n          if (!newItems[oldIndex].matched && !newItems[oldIndex].matched) {\n            newItems[oldIndex].show = false;\n            newItems[newIndex].show = false;\n          }\n\n          setMatchedIndexs([]);\n          setTurnsCount(turnsCount + 1);\n        }, 500);\n      }\n      setLetters(newItems);\n      setMatchedIndexs(matchIndexs.concat(newIndex));\n    }\n  };\n\n  const renderItem = (item, index) => {\n    return (\n      <TouchableOpacity key={item.id} onPress={() => onClick(item, index)}>\n        <View style={styles.card}>\n          <Text style={{ ...styles.text, opacity: item.show ? 1 : 0 }}>\n            {item.matched ? \"ðŸ¥³\" : item.text}\n          </Text>\n        </View>\n      </TouchableOpacity>\n    );\n  };\n\n  return (\n    <SafeAreaView>\n      <View style={styles.topBarContainer}>\n        <View>\n          <Text style={styles.counterHeading}>MATCHES</Text>\n          <Text style={styles.counterText}>{matchedCount}</Text>\n        </View>\n        <View>\n          <Text style={styles.counterHeading}>TURNS</Text>\n          <Text style={styles.counterText}>{turnsCount}</Text>\n        </View>\n      </View>\n      <View style={styles.container}>{letters.map(renderItem)}</View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n  },\n  card: {\n    width: getWidth() / 4.5,\n    height: (getHeight() - 100) / 4,\n    backgroundColor: \"#C216F5\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    margin: 5,\n    borderRadius: 5,\n  },\n  text: {\n    fontSize: 50,\n  },\n  counterText: { textAlign: \"center\" },\n  topBarContainer: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    marginTop: StatusBar.currentHeight,\n    justifyContent: \"space-between\",\n    paddingLeft: 10,\n    paddingRight: 10,\n    fontSize: width * 0.03,\n  },\n  counterHeading: {\n    fontWeight: \"bold\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}